import { Images } from "../images.slint";
import { StandardListView, ScrollView , HorizontalBox} from "std-widgets.slint";
import { Radio } from "radio.slint";

export enum Postion{
    Top,
    Bottom
}

export component Select inherits Rectangle {
    border-width: 1px;
    border-color: #E6E6E6;
    border-radius: 3px;
    callback search(string);
    background: ta.pressed ? #f9f9f9 : #FFF;
    in-out property <[StandardListViewItem]> options;
    in property <string> keyword <=> tx.text;
    in-out property <string> placeholder;
    property <bool> show: false;
    callback change(string);
    in-out property <Postion> postion: Bottom;

    ta := TouchArea{
        width: parent.width;
        height: parent.height;
        clicked => {
            show = true;
        }
    }

    HorizontalLayout {
        padding: 10px;
        Rectangle {
            HorizontalLayout {
                height: 20px;
                if placeholder != "" && keyword == "":
                    hd := Text{
                        y: -4px;
                        height: 25px;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                        color: #c4c4c4;
                        text: root.placeholder;
                    }
                tx := Text {
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
            }
        }
    }
    if show && options.length > 0:
        Rectangle{
            z: 100;
            y: postion == Postion.Top? -100px : 39px;
            width: parent.width - 0px;
            height: 100px;
            border-color: #E6E6E6;
            border-width: 1px;
            background: #FFF;
            opacity: 1;
            StandardListView {
                opacity: 1;
                width: parent.width - 40px;
                height: 100px;
                model: options; 
                current-item-changed(idx) => {
                    root.show = false;
                    change(options[idx].text);
                }
            }
        }
}